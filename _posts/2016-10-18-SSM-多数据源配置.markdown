---
layout: post
---

<h2>{{ page.title }}</h2>
<p class='meta'>{{ page.date | date_to_string }} - NanJing</p>
----------

### SSM框架 ###

1.创建maven web项目

2.web.xml 
	
	<?xml version="1.0" encoding="UTF-8"?>
	<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xmlns="http://java.sun.com/xml/ns/javaee"
	  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	  version="3.0">
	  <display-name>Archetype Created Web Application</display-name>
	  <!-- Spring和mybatis的配置文件 -->
	  <context-param>
	    <param-name>contextConfigLocation</param-name>
	    <param-value>classpath:spring-mybatis.xml</param-value>
	  </context-param>
	  <!-- 编码过滤器 -->
	  <filter>
	    <filter-name>encodingFilter</filter-name>
	    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	    <async-supported>true</async-supported>
	    <init-param>
	      <param-name>encoding</param-name>
	      <param-value>UTF-8</param-value>
	    </init-param>
	  </filter>
	  <filter-mapping>
	    <filter-name>encodingFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	  </filter-mapping>
	  <!-- Spring监听器 -->
	  <listener>
	    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	  </listener>
	  <!-- 防止Spring内存溢出监听器 -->
	  <listener>
	    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	  </listener>
	
	  <!-- Spring MVC servlet -->
	  <servlet>
	    <servlet-name>SpringMVC</servlet-name>
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	    <init-param>
	      <param-name>contextConfigLocation</param-name>
	      <param-value>classpath:spring-mvc.xml</param-value>
	    </init-param>
	    <load-on-startup>1</load-on-startup>
	    <async-supported>true</async-supported>
	  </servlet>
	  <servlet-mapping>
	    <servlet-name>SpringMVC</servlet-name>
	    <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->
	    <url-pattern>/</url-pattern>
	  </servlet-mapping>
	  <welcome-file-list>
	    <welcome-file>/index.jsp</welcome-file>
	  </welcome-file-list>
	
	</web-app>

3.spring-mvc.xml

	<?xml version="1.0" encoding="UTF-8"?>
	<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xsi:schemaLocation="http://www.springframework.org/schema/mvc   
	       http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd    http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
	        http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	
	  <!-- 启用spring mvc 注解 -->
		<context:annotation-config />
	
		<!-- 默认的注解映射的支持 -->
		<mvc:annotation-driven />
	
		<!-- 设置使用注解的类所在的jar包 -->
		<context:component-scan base-package="com.asiainfo.**.web"></context:component-scan>
	
		<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
		<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
			<property name="supportedMediaTypes">
				<list>		    
					<value>text/html; charset=utf-8</value>
					<value>application/json; charset=utf-8</value>
				</list>
			</property>
		</bean>  
	
		<!-- 启动Spring MVC 的注解功能,完成请求和注解POJO的映射 -->
		<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
			<property name="messageConverters">
				<list>
					<ref bean="mappingJacksonHttpMessageConverter" />  <!-- json转换器 -->
				</list>
			</property>
		</bean>
		 <!-- 处理静态资源 -->  
	    <mvc:resources mapping="/js/**" location="/js/" />  
	    <mvc:resources mapping="/css/**" location="/css/" />  
	
		<!-- JSP视图文件解析配置 -->
		<bean
			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="viewClass"
				value="org.springframework.web.servlet.view.JstlView" />
			<property name="prefix" value="/" />
			<property name="suffix" value=".jsp" />
			<property name="viewNames" value="jsp/*" />
			<property name="order" value="1" />
		</bean>
	
		<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
			<property name="viewClass"
				value="org.springframework.web.servlet.view.JstlView" />
			<property name="prefix" value="/" />
			<property name="suffix" value=".jsp" />
			<property name="order" value="2" />
		</bean>
	
		
		<mvc:default-servlet-handler />
	
		<!-- 上传文件拦截，设置最大上传文件大小 10M=10*1024*1024(B)=10485760 bytes -->
		<bean id="multipartResolver"
			class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<property name="defaultEncoding" value="UTF-8" />
			<property name="maxUploadSize" value="32505856" /><!-- 上传文件大小限制为31M，31*1024*1024 -->
			<property name="maxInMemorySize" value="4096" />
		</bean>
		
	</beans>								

4.spring-mybatis.xml

		<?xml version="1.0" encoding="UTF-8"?>
	<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xsi:schemaLocation="http://www.springframework.org/schema/beans  
	  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
	  http://www.springframework.org/schema/context  
	  http://www.springframework.org/schema/context/spring-context-3.1.xsd  
	  http://www.springframework.org/schema/mvc  
	  http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
		<!-- 自动扫描 -->
		<context:component-scan base-package="com.asiainfo" />
		<!-- 引入配置文件 -->
		<bean id="propertyConfigurer"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="location" value="classpath:jdbc.properties" />
		</bean>
	
		<!-- 局数据数据源 -->
		<bean id="dataSourcejsj" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${driver}" />
			<property name="url" value="${url}" />
			<property name="username" value="${jsj.username}" />
			<property name="password" value="${jsj.password}" />
			<!-- 初始化连接大小 -->
			<property name="initialSize" value="${initialSize}"></property>
			<!-- 连接池最大数量 -->
			<property name="maxActive" value="${maxActive}"></property>
			<!-- 连接池最大空闲 -->
			<property name="maxIdle" value="${maxIdle}"></property>
			<!-- 连接池最小空闲 -->
			<property name="minIdle" value="${minIdle}"></property>
			<!-- 获取连接最大等待时间 -->
			<property name="maxWait" value="${maxWait}"></property>
		</bean>
	
		<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
		<bean id="sqlSessionFactoryjsj" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSourcejsj" />
		</bean>
	
		<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage">
				<value>
					com.asiainfo.bdquery.dao;
				</value>
			</property>
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryjsj"></property>
		</bean>
	
		<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
		<bean id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSourcejsj" />
		</bean>
	
	</beans>
5.jdbc.properties

6.pom.xml

	<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
		<modelVersion>4.0.0</modelVersion>
		<groupId>com.migubilling</groupId>
		<artifactId>jsj-management</artifactId>
		<packaging>war</packaging>
		<version>0.0.1-SNAPSHOT</version>
		<name>jsj-management Maven Webapp</name>
		<url>http://maven.apache.org</url>
	
		<properties>
			<spring.version>4.2.0.RELEASE</spring.version>
			<mybatis.version>3.3.0</mybatis.version>
			<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
			<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
			<!-- log4j日志文件管理包版本 -->
			<slf4j.version>1.7.7</slf4j.version>
			<log4j.version>1.2.17</log4j.version>
		</properties>
	
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
				<!-- 表示开发的时候引入，发布的时候不会加载此包 -->
				<scope>test</scope>
			</dependency>
			<!-- spring核心包 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
	
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
	
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
	
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
	
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
	
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- mybatis核心包 -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<!-- mybatis/spring包 -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>1.2.2</version>
			</dependency>
			<!-- 导入java ee jar 包 -->
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>7.0</version>
			</dependency>
			<!-- 导入dbcp的jar包，用来在applicationContext.xml中配置数据库 -->
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.2.2</version>
			</dependency>
			<!-- JSTL标签类 -->
			<dependency>
				<groupId>jstl</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
			</dependency>
			<!-- 日志文件管理包 -->
			<!-- log start -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
	
	
			<!-- 格式化对象，方便输出日志 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.1.41</version>
			</dependency>
	
	
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
	
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- log end -->
			<!-- 映入JSON -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.5.0</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.5.0</version>
			</dependency>
	
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>2.5.0</version>
			</dependency>
			<!-- 上传组件包 -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.3.1</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.9</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>2.2.4</version>
			</dependency>
			<dependency>
				<groupId>cn.guoyukun.jdbc</groupId>
				<artifactId>oracle-ojdbc6</artifactId>
				<version>11.2.0.3.0</version>
			</dependency>
		</dependencies>
	
		<build>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
			</plugins>
			<resources>
				<resource>
					<directory>src/main/java</directory>
					<includes>
						<include>**/*.xml</include>
						<include>**/*.properties</include>
					</includes>
				</resource>
				<resource>
					<directory>src/main/resources</directory>
				</resource>
			</resources>
		</build>
	
	</project>

7.多数据源配置

	<?xml version="1.0" encoding="UTF-8"?>
	<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
	           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	           http://www.springframework.org/schema/util 
	           http://www.springframework.org/schema/util/spring-util-4.2.xsd
	           http://www.springframework.org/schema/context 
	           http://www.springframework.org/schema/context/spring-context-4.2.xsd
	           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	
		<!-- 自动扫描 -->
		<context:component-scan base-package="com.asiainfo" />
	
		<!-- 引入配置文件 -->
		<bean id="propertyConfigurer"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="location" value="classpath:jdbc.properties" />
		</bean>
	
		<!-- 局数据数据源 -->
		<bean id="dataSourcejsj" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${driver}" />
			<property name="url" value="${url}" />
			<property name="username" value="${jsj.username}" />
			<property name="password" value="${jsj.password}" />
			<!-- 初始化连接大小 -->
			<property name="initialSize" value="${initialSize}"></property>
			<!-- 连接池最大数量 -->
			<property name="maxActive" value="${maxActive}"></property>
			<!-- 连接池最大空闲 -->
			<property name="maxIdle" value="${maxIdle}"></property>
			<!-- 连接池最小空闲 -->
			<property name="minIdle" value="${minIdle}"></property>
			<!-- 获取连接最大等待时间 -->
			<property name="maxWait" value="${maxWait}"></property>
		</bean>
	
		<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
		<bean id="sqlSessionFactoryjsj" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSourcejsj" />
			<property name="configLocation" value="classpath:mybatis-config.xml" />
		</bean>
	
		<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage">
				<value>
					com.asiainfo.bdquery.dao;
				</value>
			</property>
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryjsj"></property>
		</bean>
	
		<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
		<bean id="transactionManagerjsj"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSourcejsj" />
			<property name="globalRollbackOnParticipationFailure" value="false" />
		</bean>
	
		<!-- 使用annotation定义事务 -->
		<tx:annotation-driven transaction-manager="transactionManagerjsj"
			proxy-target-class="true" />
	
		<!-- 系统管理数据源 -->
		<bean id="dataSourcesys" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${driver}" />
			<property name="url" value="${url}" />
			<property name="username" value="${sys.username}" />
			<property name="password" value="${sys.password}" />
			<!-- 初始化连接大小 -->
			<property name="initialSize" value="${initialSize}"></property>
			<!-- 连接池最大数量 -->
			<property name="maxActive" value="${maxActive}"></property>
			<!-- 连接池最大空闲 -->
			<property name="maxIdle" value="${maxIdle}"></property>
			<!-- 连接池最小空闲 -->
			<property name="minIdle" value="${minIdle}"></property>
			<!-- 获取连接最大等待时间 -->
			<property name="maxWait" value="${maxWait}"></property>
		</bean>
	
		<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
		<bean id="sqlSessionFactorysys" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSourcesys" />
			<property name="configLocation" value="classpath:mybatis-config.xml" />
		</bean>
	
		<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage">
				<value>
					com.asiainfo.system.dao;
				</value>
			</property>
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactorysys"></property>
		</bean>
	
		<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
		<bean id="transactionManagersys"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSourcesys" />
			<property name="globalRollbackOnParticipationFailure" value="false" />
		</bean>
	
		<!-- 使用annotation定义事务 -->
		<tx:annotation-driven transaction-manager="transactionManagersys"
			proxy-target-class="true" />
	
	</beans>

----------

---
layout: post
---

<h2>{{ page.title }}</h2>
<p class='meta'>{{ page.date | date_to_string }} - NanJing</p>
----------

### Palindrome Number ###
Given an integer, convert it to a roman numeral.

{% highlight cpp %}
class Solution {
public:
    string intToRoman(int num) {
        
        const int digit[] = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};
        const string romanD[] = {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};
        string roman;
        for (int i = 0; num > 0; ++i)
        {
            int count = num / digit[i];
            num %= digit[i];
            for (; count > 0; --count)
            roman += romanD[i];
        }
        return roman;
    }
};
{% endhighlight %}

### Container With Most Water ###
Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.

{% highlight cpp %}
class Solution {
public:
    int maxArea(vector<int> &height) {
        int cur, start = 0, end = height.size()-1;
        int max=0;
        bool flag = false;
        while(start<end)
        {
            if(height[start]<=height[end])
                flag = true;
            else
                flag = false;
            cur = (end-start)*(flag?height[start]:height[end]);
            if(cur > max)
                max = cur;
            if(flag)
                ++start;
            else
                --end;
        }
        return max;
    }
};
{% endhighlight %}


----------
